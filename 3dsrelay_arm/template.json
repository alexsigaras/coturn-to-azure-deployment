{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "instanceCount": {
            "type": "Int"
        },
        "virtualMachineNamePrefix": {
            "type": "String"
        },
        "virtualMachineSize": {
            "defaultValue": "Standard_A2",
            "type": "String"
        },
        "adminUsername": {
            "defaultValue": "turnroot",
            "type": "String"
        },
        "adminPublicKey": {
            "type": "String"
        },
        "availabilitySetPlatformFaultDomainCount": {
            "defaultValue": "3",
            "type": "String"
        },
        "availabilitySetPlatformUpdateDomainCount": {
            "defaultValue": "5",
            "type": "String"
        },
        "diagnosticsStorageUrl": {
            "defaultValue": "https://3dstreamingdiagnostics.blob.core.windows.net/",
            "type": "String"
        },
        "addressPrefix": {
            "defaultValue": "10.7.0.0/16",
            "type": "String"
        },
        "subnetName": {
            "defaultValue": "default",
            "type": "String"
        },
        "subnetPrefix": {
            "defaultValue": "10.7.1.0/24",
            "type": "String"
        },
        "publicIpAddressType": {
            "defaultValue": "Static",
            "type": "String"
        },
        "postgreSqlConnectionString": {
            "type": "SecureString"
        },
        "defaultTurnRealm": {
            "type": "String"
        },
        "turnImage": {
            "type": "String"
        },
        "secretBasedAuthentication": {
            "type": "Bool"
        },
        "vaultName": {
            "defaultValue": "keyvault3dstreaming",
            "type": "String",
            "metadata": {
                "description": "Name of Key Vault that contains certificate for TURN server"
            }
        },
        "vaultResourceGroup": {
            "defaultValue": "keyvault3dstreaming",
            "type": "String",
            "metadata": {
                "description": "Resource Group of Key Vault that has a secret"
            }
        },
        "secretUrlWithVersion": {
            "defaultValue": "https://keyvault3dstreaming.vault.azure.net/secrets/turnCert/2d973062709843b2ba820cc3cece86c8",
            "type": "String",
            "metadata": {
                "description": "Url of the certificate in Key Vault"
            }
        },
        "certThumbprint": {
            "defaultValue": "18E1F24AAF85A6804ACC89FAC5DB9DFEFD30C034",
            "type": "String",
            "metadata": {
                "description": "Thumbprint of the certificate"
            }
        }
    },
    "variables": {
        "vmName": "[concat(parameters('virtualMachineNamePrefix'),uniqueString(resourceGroup().id))]",
        "networkInterfaceName": "[concat(variables('vmName'),'-net')]",
        "publicIpAddressName": "[concat(variables('vmName'),'-ip')]",
        "virtualNetworkName": "[concat(variables('vmName'), '-vnet')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "networkSecurityGroupName": "[concat(variables('vmName'),'-nsg')]",
        "availabilitySetName": "[concat(variables('vmName'),'-as')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'),copyIndex())]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('vmName'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "[parameters('secretUrlWithVersion')]"
                                }
                            ]
                        }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'),copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[parameters('diagnosticsStorageUrl')]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                }
            },
            "dependsOn": [
                "networkinterfacecopy",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/DockerExtension')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "dockerextcopy",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "DockerExtension",
                "typeHandlerVersion": "1.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "docker": {
                        "port": "2376"
                    }
                }
            },
            "dependsOn": [
                "vmcopy"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/CustomScriptExtension')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "custscriptextcopy",
                "count": "[parameters('instanceCount')]"
            },
            "tags": {
                "displayName": "docker-stuff"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/anastasiia-zolochevska/azturnlb/master/3dsrelay_arm/startDocker.sh"
                    ],
                    "commandToExecute": "[concat('bash startDocker.sh ', parameters('certThumbprint'),' ',  parameters('turnImage'), ' \"',parameters('postgreSqlConnectionString'),'\" ', parameters('defaultTurnRealm'), ' ', parameters('secretBasedAuthentication'))]"
                }
            },
            "dependsOn": [
                "dockerextcopy"
            ]
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]",
                "managed": true
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2016-12-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('networkInterfaceName'),copyIndex())]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "networkinterfacecopy",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'),copyIndex()))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "publicipcopy",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[concat(variables('publicIpAddressName'),copyIndex())]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "publicipcopy",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-5349",
                        "properties": {
                            "priority": 400,
                            "sourceAddressPrefix": "*",
                            "protocol": "*",
                            "destinationPortRange": "5349",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}
